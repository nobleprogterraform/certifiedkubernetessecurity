- Now let's discuss about kata containers and see how it achieves container sandboxing 
- Kata takes a different approach to sandbox containers as compared to gvisor. We already saw that virtual machines are excellent at isolating resources so why don't we use vms to isolate containers.
- Kata inserts each container into its own separate virtual machine and each container will have its own dedicated kernel running inside just like g-visor this gets rid of problems caused by all container apps communicate directly to the same operating system now each container has its own VM to bother
so if they crash it or abuse it in any way it doesn't bring the whole system down, only that specific container will experience problems instead of all the containers running on the system 
so here is the obvious question wouldn't it take a significant amount of time to first create a virtual Machine for every single container to be deployed and more importantly wouldn't there be concerns around performance 
the virtual machines that are created by Kata are lightweight and more focused on performance however although the performance is optimized with the added isolation of a virtual machine there will be a small performance penalty as compared to traditional continuous as each one will now need slightly more memory and computer resources 
probably the bigger issue here is that since Kata containers need hardware virtualization support this means that you might not be able to run it on your typical Cloud service provider 
cloud compute instance is already a virtual machine so if you intend to use Kata, you are basically trying to run a virtual machine inside another virtual machine this is called as nested virtualization which is not supported by many cloud providers 
there are a few exceptions for example Google Cloud does support virtualization but it has to be enabled manually 
also even if there is support nested virtualization performance is usually very poor 